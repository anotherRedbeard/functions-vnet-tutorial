# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  branches:
    include:
      - main

pool:
  vmImage: ubuntu-latest

variables:
  FUNCTION_APP_NAME: 'red-cus-privatefunction-fn'
  SERVICE_CONNECTION: 'QuickStartTemplates-AzureServiceConnection-Private Functions Deploy'

stages:
- stage: Build
  displayName: Build and create artifact

  jobs:
  - job: Build
    displayName: Build
    steps:
    
    - script: |
        dotnet restore ./
        dotnet build --configuration Release ./*.csproj

    - task: DotNetCoreCLI@2
      inputs:
        command: publish
        arguments: '--configuration Release --output publish_output'
        projects: '**/*.csproj'
        publishWebProjects: false
        modifyOutputPath: false
        zipAfterPublish: false

    # Archive everything in the 'zip' folder for the source
    - task: ArchiveFiles@2
      displayName: "Archive files"
      inputs:
        rootFolderOrFile: "$(System.DefaultWorkingDirectory)/publish_output"
        includeRootFolder: false
        archiveFile: "$(System.DefaultWorkingDirectory)/build$(Build.BuildId).zip"

    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(System.DefaultWorkingDirectory)/build$(Build.BuildId).zip'
        artifact: 'drop'
        publishLocation: 'pipeline'

- stage: DevDeploy
  displayName: Deploy to Dev
  dependsOn: Build
  jobs:
  - deployment: 'DeploytoDev'
    environment: 'dev'
    strategy:
      runOnce:
        deploy:
          steps:
            # download all artifacts 
            - task: DownloadPipelineArtifact@2
              inputs:
                buildType: 'current'
                downloadPath: '$(System.ArtifactsDirectory)'

            # deploy zip to app service
            - task: AzureFunctionApp@1  
              displayName: Deploy Function App
              inputs:
                azureSubscription: $(SERVICE_CONNECTION)
                appType: 'functionApp'
                appName: $(FUNCTION_APP_NAME)
                package: '$(System.ArtifactsDirectory)/drop/*.zip'
                deploymentMethod: 'zipDeploy'
                slotName: 'Production'